* currently working on
** sub divide solar dynamics so components are accessible from gui
** dead ships are not removed properly during simulation
   and after a fleet is spotted a secon time, old dead ships from this
   fleet reappear..?
** why does sending frames take so long?
** lacking proper leave game functionality
** end game status not displayed
** bombing ships concentrate in a ball
** priority buttons unresponsive to first right click
** simulation progress bar
** projectile graphics object
** move keywords and allocations to "types.h"
** move expansion costs to research?
** targui should only appear when multiple targets are available
** command selectors drawn on top of each other
** targui shows self as target (though this does not create a command)
* long term goals
** strategy
*** different solars have different resources
    specific research projects
    specific production
*** research directions
**** vision
**** stealth
**** espionage
**** propulsion & navigation
**** weapons
**** shields
**** infrastructure
**** democracy
*** diplomatic agreements
**** cease fire
**** peace
**** military alliance
**** trade agreement
** tactics
*** new ships with trigger functions
**** make a solar build queue
***** ship/turret designer interface
***** ship design focus/priority
*** resources on map to match with buildings?
*** old ship model
**** ship components
    construct on grid with structure components? 
    each component has a type, size, energy usage, cost...
**** engine
**** energy
**** shield
**** weapons
**** hull
**** life support
**** cargo hold
**** ship types
***** bombers
     good at bombing solars
     bad at fighting any other ship
***** fighters
     good at fighting battleships
     bad at bombing solars
***** battleships
     good at destroying bombers
     bad at fighting fighters
***** transport
     automatically deployed ship for trade agreements
**** ship experience and fleet commanders
**** add ship rotation speed and ships can only fire forward
** world
*** generate map while exploring
*** define discovered area for players
*** treasures in space
*** terrain types
**** nebula
     damaging area with low sight
     find rare resources
**** high temperospatial curvature
     chance of worm-holes
     low navigation: risk going off course
     small ships risk falling in worm hole
**** asteroids
     slow travel speed
     find resources
     [low shields] risk damage
*** moving solars
*** barbarians
* basic goals
** server game
*** research structure
**** hash table
**** nodes with:
     requirement list
     cost
     level
     level-dependent modifier functions
     allow list
**** prioritized build_[ship|turret]
    e.g. focus on any of stealth, damage, speed etc.
*** decide what to do with clients without objects
** client game
*** new command gui and target gui
**** available options
     target space: "goto waypoint"
     target waypoint: "goto waypoint"
     target friendly fleet: "follow", "join"
     target opponent fleet: "follow", "attack"
     target friendly solar: "land"
     target opponent solar: "attack"
     target neutral solar: "attack", (if undefended) "colonize"
*** clickable minimap
*** choice/evolution: display ready players, autoplay when all ready
*** command_gui should have option to allocate X ships of type T
*** simulation: interpolate using ship velocity
*** draw all ships in same size, have a ship.draw_scale
    so that ships can be drawn in same size in command gui
    but different sizes in universe
*** events board
    messages such as "your fleet was destroyed" or "your solar X
    merged with Bla's solar Y; your population won the ensuing battle"
** before game interface
** distribution
   cmake build in a build directory so one can clean
   disable form_builder in tgui (check opts with ccmake)
** structure
*** consider making work sector into a graph node class
* remember
** when updating a struct/class, also update serialization
* git pending
* fixed
** consider moving sub window classes to main window build routine
   so they can access tooltip etc.
** solar system stability tests
**** parallel cost subtractions
** turrets do no damage? take no damage?
    look over solar combat routines
** solar choice has negative values in solar tick
    possibly fixed by initializing summation var in allocation::count

    possibly fixed by limiting water usage checks to expansion
    sectors
** crowding death goes to NaN
** notes on some bugs
** fixes to solar dynamics resource payments
** ship build run away (increase cost/time?)
** bad default solar choice (add templates?)
**** added choice templates
**** how should choice template buttons trigger allocation button update?
     consider connecting a custom signal?
     remember to set sub window to build_info()
** sector expansion happens without resources
** added basic solar info
** added listening to proceed button
** digits are ugly
** clicking a solar (sub) query priority button causes segfault
    fix: used a normal pointer to the button
    since introduction of referenced buttons in event handlers
** clicking in solar gui also triggers game object event handler
** accepting solar gui does not destroy priority buttons
    fixed: byref widgets to event handlers
    ... nor does it destroy sub window buttons
    maybe stuck in event functions?
** frame rate is to high
** simulation step is not drawn
    Solved: fixed a bug where the simulation step event handler forgot
    to return a value.
** interface is drawn on mini-map^^
    Solved: note: sfgui draws on the latest view which was drawn upon,
    not on the current view!
** generalized client game window loops to a function
** adding a Box::Ptr in a Window fails internally (graphics.cpp: 209)
    error: bad_weak_ptr
    std::shared_ptr (count 4, weak 2)

    Probably caused by that methods are not called through a shared
    pointer in the constructor? Move constructor to create method...
** check that serializations still match content
** check choice sub allocation for military
** check that all initialize-functions are called
** figure out why file-global allocation sub classes init empty
    probably the keywords data they use is not initialized?
    moved to initializers
** c_solar::normalize uses countable_allocation::normalize
** fixed compile step errors
** [done] consider adding named string constants for sub sectors etc.
** fix: serialization templates prefer general over specific
** made specific allocation classes
** [done] add a turret class
** [done] implement vectorised allocation templates in graphics.cpp
** [done] apply updated solar (choice) structure in solar_tick
** figure out how to limit sub sector priority
** [done] default values for solar choice
** moved solar::choice_t to choice.h
** [done] finish cost.cpp
** [done] client_game::build_choice should link game object events to interface objects, e.g. solar clicked
** selector queue cycling
** targui scales with zoom
** comgui does not show action
** targui remembers selected entities
** targui text does not fit width
** [done] add to command: action (from above options)
** [done] add command::action to command::operator ==
** [done] add queue_level to command_selector
** [done] add queue_level checking to command_at
** [done] replace entity_at with entities_at
** [done] replace right click event handler with target option gui
** [done] implement command action in game_data::increment
** display victor
** client generated solar choice for other player's solar
   maybe happened after the solar was conquered?
   
   probably fixed: removing choices for non-owned solars in
   client::game::reload_data
** send victor to client on game completion
** solar gui does not draw buttons in resized window
** sending colonizer ships spends population
** template selector is ugly
** colonisation/transport ships
    and make some solars without defense
** incorrect population increment shown
** should respond to return/escape keys
** does not terminate on window close event
** minimap drawn over comgui
** [low priority] minimap bounding box drawn incorrectly after window resize
** defense build rates need to be checked
** fleets follow targets that leave sight
   check range of sight in update fleet data?
** fleets follow last assigned in split
** templates and feedback in solar gui
    show per round increments in overview
** [fixed?] solar gui lists increments per unit time
   game settings stores round length in ticks
** moved dt from game_data to game_settings to avoid duplicate in client_game
** removed entity_selector::allocated_ships
** setting up autotools
   aclocal generates aclocal.m4
   automake --add-missing uses configure.ac, aclocal.m3 and Makefile.am to build Makefile.in
   autoconf uses configure.ac to build configure
   configure uses Makefile.in to build Makefile
** [low priority] command_gui scales with zoom
** add template selector to gui
** implement templates in solar_gui.cpp
** faster initial expansion
** [fixed for single fleet relocation] fleet targets are lost on split (new id)
** fixed: orders targeting unseen targets disappear
   also targeting fleets that leave sight
** fixed a bug where bombarded solars get negative defense/population
** add attribute bool entity_selector.seen
    store entity selectors, but unset seen each round. Show non-seen
    entities as semi-transparent, non-interactive.
** fixed: player colors difficult to distinguish
** fixed: waypoints not dissapearing (had erased waypoint removal)
** fleets sent to waypoint remain idle
** fog of war
*** [done] give ships attribute sfloat vision
*** [done] give fleets attribute sfloat vision
*** [done] add fleet.vision to serialisation
*** [done] update fleet.vision in update_fleet_data()
*** [done] give solars attribute vision
*** send limited game data objects to client
     a fleet or solar is seen if it is owned or within vision range of
     an owned fleet or solar.
** research should influence ships
** fixed a bug where solar ships were not sent to client
** gave ships vision
** fixed a bug where waypoints were cleared between choice evaluations
** added research to solar gui
** added research influence in ship constructor
** added research to serialization
** solar choice interface
** replaced waypoint.landed_ships with checking fleet idle target
** added minimap, fixed text scale and position
** tempfix for: fleet growth goes negative
** fixed: idle fleet sent to waypoint remained idle
** fixed: waypoint removed though having landed ships
** research pooling
** better game round phase indicators
** command_gui should sort ships by type
** added ship class sub tables in command_gui
** fixed: ships that have left or died remain listed at waypoint
** fixed: fleet evaluation order impacted battle result
** added an entity_selector -> queue_level (select order queue)
** fixed: comgui does not close after choice step
** fixed: fleet speed limit = min(ship.speed)
** fixed: prevented creation of circular graphs
** fixed: when client deletes command + wp, server reinserts wp
** fixed: server removes waypoints with landed ships
** fixed: ships fire in order of fleet, unfair
** fixed: when targeting a fleet, server crashes because id changes
** fixed: fleet idle target
   when arriving to waypoint or client unsets command
   (waypoints now store landed ships)
** fixed: waypoint graph reconstruction
** fixed: command receive printout
** fixed: waypoints created when no sources selected
** fixed: fleet radius can decrease indefinitely
   the radius must be large enough so the player can select the fleet
** graphics::draw_ship different types and param scale
** discovered some new bugs, see notes.org
** fixed: waypoint pending_commands not updated
   for some odd reason fixed by looping over 
   for(k,v in all_wp) waypoints[k] = v;
   instead of assigning
   waypoints.insert(all_wp.begin(), all_wp.end());
** fixed: server seems to list waypoints multiple times
   caused by multiple \n in id?
   note that clients resend old waypoints!
** fixed: commands on waypoints are not handled in choice phase
** fixed: waypoints targeted by waypoints are deleted
** fixed: fleet does not show radius after waypoint trigger
   and can't be selected
** fixed: client rectangle upwards select does not work
** fixed: fleet position seems to be off
** added ship scale to draw routine so ships are larger in command gui
** fixed recursive ship increment/decrement through waypoints
** fixed a bug where remove command deleted the wrong entity
** command distance checker sees past end points
** best way to add external dependencies
   added sub directories to make
   consider linking to their git repos?
** when giving multiple fleet commands, all ships are assigned
** added command_gui
** added SFML and TGUI as submodules in external/src
   make will build them in external
** simplified ship drawing selection in game::draw_universe
** window transforms should remain to next round
** add waypoint to game_data serialization
** fix waypoint id check in game_data::target_position
** fixed relocate ships setting new ship fleet id
** add waypoint objects
    so that: 
    o commands don't need child commands
    o multiple fleets can meet at a waypoint
    o commands aren't source/target entities
** commands should not be targets
** solar system
** write selector::get_ships, remove selector::get_quantity
** upgrade to sfml2.2 
   to get window::hasFocus()
   to enable building ~/code/include/TGUI-0.6.7
   (note that tgui 0.6.6 should work with sfml2.0)
   https://tgui.eu/
** build and test ~/code/include/TGUI-0.6.7
** why is client receiving sig abort on disconnect? thread-related?
   exit was called in query thread
** game_data::increment (ship update)
** add fleet id tracker to ship, implement in apply choice
** game_data::apply_choice
*** planet command
*** fleet command
** fixed command incrementation interface, added fleet serialization
** merged draw and data responsibility in selector in client::game

** translate, zoom
** test event handling
    why don't commands show? - translate before rotate!
    why does selection rect draw at odd places? - use e.mouseMove.[x|y]
    why area select when click? - just tiny area select?
    find how to scale command arrow only lengthwise - transform order
** added utility
** client game: choice event return value
** server com: allocate/deallocate packet
** client game: draw command
** client game
*** build choice interface
**** clicked_at
     make a "selectable" class with meta info: id, type etc.
     
     make commands from and to selectables? or just from? just track
     selection? go back to having a "selected" attribute?
**** make_command
** split com into socket_t, com_client, com_server
** replaced client's game_handler with struct client_game
** implemented command serialization
** started writing choice_event handler
** client game
*** area_select
** server game
*** universe construction
**** game settings object
**** solar distribution
** client view dimensions set to match game_data.settings
** client simulation play/pause with space key
** fixed rudementary game_data build routine
** added game settings attributes
** fixed operator <<(packet, solar)
** added solar to drawing
** removed id attributes (stored in has map pair)
** added player to game_data 
** client game_data g0 should update after simulation
   replaced socket_t by socket_t* in query function

   apparently, passing ref(socket_t) (probably its the
   ref(sf::Packet?) to thread causes ~thread() which in turn causes
   abort
** server receives choice
   related to copying packets - fixed by using client_t* instead of
   client_t in queue.  

   gets n=-9744, for some reason still enters push loop. Test run with
   &&res in loop condition. Check if n is wrong from start.
   
   
   
   
   
