* currently working on
** solar gui
   solar tick equations
* long term goals
** strategy
*** development: focus on infrastructure, research or industry
*** different solars have different resources
    specific research projects
    specific production
*** research directions
**** vision
**** stealth
**** espionage
**** propulsion & navigation
**** weapons
**** shields
**** infrastructure
**** democracy
*** diplomatic agreements
**** cease fire
**** peace
**** military alliance
**** trade agreement
*** population
    Population can be distributed between production goals

    A political system makes the population happy but limits
    population distribution choices

    A happy population grows

    A large population without infrastructure becomes unhappy

    An unhappy population does not produce well

    Each solar's population has trends of opinion concerning
    development focus and diplomacy
** tactics
*** ship components
    construct on grid with structure components? 
    each component has a type, size, energy usage, cost...
**** engine
**** energy
**** shield
**** weapons
**** hull
**** life support
**** cargo hold
*** ship types
**** bombers
     good at bombing solars
     bad at fighting any other ship
**** fighters
     good at fighting battleships
     bad at bombing solars
**** battleships
     good at destroying bombers
     bad at fighting fighters
**** transport
     automatically deployed ship for trade agreements
*** terrain types
**** nebula
     damaging area with low sight
     find rare resources
**** high temperospatial curvature
     chance of worm-holes
     low navigation: risk going off course
     small ships risk falling in worm hole
**** asteroids
     slow travel speed
     find resources
     [low shields] risk damage
*** moving solars
*** fog of war
*** barbarians
* basic goals
** server game
*** send victor to client on game completion
*** colonisation/transport ships
*** emulate simultaneous evaluation of ship_bombard
*** add ship rotation speed and ships can only fire forward
** client game
*** add attribute bool entity_selector.seen
    store entity selectors, but unset seen each round. Show non-seen
    entities as semi-transparent, non-interactive.
*** display "ready to play"
*** display victor
*** command_gui should have option to allocate X ships of type T
*** simulation: interpolate using ship velocity
*** draw all ships in same size, have a ship.draw_scale
    so that ships can be drawn in same size in command gui
    but different sizes in universe
*** events board
    messages such as "your fleet was destroyed" or "your solar X
    merged with Bla's solar Y; your population won the ensuing battle"
** before game interface
* bugs
** waypoints not dissapearing
* issues
** socket_t exits on disconnect in thread, causes segfault
** [low priority] minimap bounding box drawn incorrectly after window resize
** [low priority] segfault after client side target missing, some turns after resume from suspend.
** [low priority] player colors difficult to distinguish
** [low priority] command_gui scales with zoom
** [low priority] area select goes over command gui
** [low priority] ship classes should not be in solar?
   but then ship classes will be replaced with ship components...
** [low priority] ships bombard and land in order of fleet, unfair
   add a map<player, damage> to solar, evaluate conquering after
   bombardment phase
** [low priority] server sends fleets with missing target to client
   when the target is a fleet which has dissappeared after the source
   was updated

   consider tracking fleet splits so a fleet can chose a new target.
* remember
** when updating a struct/class, also update serialization
* git pending
* fixed
** fleets sent to waypoint remain idle
** fog of war
*** [done] give ships attribute sfloat vision
*** [done] give fleets attribute sfloat vision
*** [done] add fleet.vision to serialisation
*** [done] update fleet.vision in update_fleet_data()
*** [done] give solars attribute vision
*** send limited game data objects to client
     a fleet or solar is seen if it is owned or within vision range of
     an owned fleet or solar.
** research should influence ships
** fixed a bug where solar ships were not sent to client
** gave ships vision
** fixed a bug where waypoints were cleared between choice evaluations
** added research to solar gui
** added research influence in ship constructor
** added research to serialization
** solar choice interface
** replaced waypoint.landed_ships with checking fleet idle target
** added minimap, fixed text scale and position
** tempfix for: fleet growth goes negative
** fixed: idle fleet sent to waypoint remained idle
** fixed: waypoint removed though having landed ships
** research pooling
** better game round phase indicators
** command_gui should sort ships by type
** added ship class sub tables in command_gui
** fixed: ships that have left or died remain listed at waypoint
** fixed: fleet evaluation order impacted battle result
** added an entity_selector -> queue_level (select order queue)
** fixed: comgui does not close after choice step
** fixed: fleet speed limit = min(ship.speed)
** fixed: prevented creation of circular graphs
** fixed: when client deletes command + wp, server reinserts wp
** fixed: server removes waypoints with landed ships
** fixed: ships fire in order of fleet, unfair
** fixed: when targeting a fleet, server crashes because id changes
** fixed: fleet idle target
   when arriving to waypoint or client unsets command
   (waypoints now store landed ships)
** fixed: waypoint graph reconstruction
** fixed: command receive printout
** fixed: waypoints created when no sources selected
** fixed: fleet radius can decrease indefinitely
   the radius must be large enough so the player can select the fleet
** graphics::draw_ship different types and param scale
** discovered some new bugs, see notes.org
** fixed: waypoint pending_commands not updated
   for some odd reason fixed by looping over 
   for(k,v in all_wp) waypoints[k] = v;
   instead of assigning
   waypoints.insert(all_wp.begin(), all_wp.end());
** fixed: server seems to list waypoints multiple times
   caused by multiple \n in id?
   note that clients resend old waypoints!
** fixed: commands on waypoints are not handled in choice phase
** fixed: waypoints targeted by waypoints are deleted
** fixed: fleet does not show radius after waypoint trigger
   and can't be selected
** fixed: client rectangle upwards select does not work
** fixed: fleet position seems to be off
** added ship scale to draw routine so ships are larger in command gui
** fixed recursive ship increment/decrement through waypoints
** fixed a bug where remove command deleted the wrong entity
** command distance checker sees past end points
** best way to add external dependencies
   added sub directories to make
   consider linking to their git repos?
** when giving multiple fleet commands, all ships are assigned
** added command_gui
** added SFML and TGUI as submodules in external/src
   make will build them in external
** simplified ship drawing selection in game::draw_universe
** window transforms should remain to next round
** add waypoint to game_data serialization
** fix waypoint id check in game_data::target_position
** fixed relocate ships setting new ship fleet id
** add waypoint objects
    so that: 
    o commands don't need child commands
    o multiple fleets can meet at a waypoint
    o commands aren't source/target entities
** commands should not be targets
** solar system
** write selector::get_ships, remove selector::get_quantity
** upgrade to sfml2.2 
   to get window::hasFocus()
   to enable building ~/code/include/TGUI-0.6.7
   (note that tgui 0.6.6 should work with sfml2.0)
   https://tgui.eu/
** build and test ~/code/include/TGUI-0.6.7
** why is client receiving sig abort on disconnect? thread-related?
   exit was called in query thread
** game_data::increment (ship update)
** add fleet id tracker to ship, implement in apply choice
** game_data::apply_choice
*** planet command
*** fleet command
** fixed command incrementation interface, added fleet serialization
** merged draw and data responsibility in selector in client::game

** translate, zoom
** test event handling
    why don't commands show? - translate before rotate!
    why does selection rect draw at odd places? - use e.mouseMove.[x|y]
    why area select when click? - just tiny area select?
    find how to scale command arrow only lengthwise - transform order
** added utility
** client game: choice event return value
** server com: allocate/deallocate packet
** client game: draw command
** client game
*** build choice interface
**** clicked_at
     make a "selectable" class with meta info: id, type etc.
     
     make commands from and to selectables? or just from? just track
     selection? go back to having a "selected" attribute?
**** make_command
** split com into socket_t, com_client, com_server
** replaced client's game_handler with struct client_game
** implemented command serialization
** started writing choice_event handler
** client game
*** area_select
** server game
*** universe construction
**** game settings object
**** solar distribution
** client view dimensions set to match game_data.settings
** client simulation play/pause with space key
** fixed rudementary game_data build routine
** added game settings attributes
** fixed operator <<(packet, solar)
** added solar to drawing
** removed id attributes (stored in has map pair)
** added player to game_data 
** client game_data g0 should update after simulation
   replaced socket_t by socket_t* in query function

   apparently, passing ref(socket_t) (probably its the
   ref(sf::Packet?) to thread causes ~thread() which in turn causes
   abort
** server receives choice
   related to copying packets - fixed by using client_t* instead of
   client_t in queue.  

   gets n=-9744, for some reason still enters push loop. Test run with
   &&res in loop condition. Check if n is wrong from start.
   
   
